// Code generated by protoc-gen-go. DO NOT EDIT.
// source: knowledge_graph.proto

package graph

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KnowledgeGraph struct {
	Nodes                map[string]*_struct.Struct `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Edges                map[string]*_struct.Struct `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *KnowledgeGraph) Reset()         { *m = KnowledgeGraph{} }
func (m *KnowledgeGraph) String() string { return proto.CompactTextString(m) }
func (*KnowledgeGraph) ProtoMessage()    {}
func (*KnowledgeGraph) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4c45ecb0153b5ca, []int{0}
}

func (m *KnowledgeGraph) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KnowledgeGraph.Unmarshal(m, b)
}
func (m *KnowledgeGraph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KnowledgeGraph.Marshal(b, m, deterministic)
}
func (m *KnowledgeGraph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KnowledgeGraph.Merge(m, src)
}
func (m *KnowledgeGraph) XXX_Size() int {
	return xxx_messageInfo_KnowledgeGraph.Size(m)
}
func (m *KnowledgeGraph) XXX_DiscardUnknown() {
	xxx_messageInfo_KnowledgeGraph.DiscardUnknown(m)
}

var xxx_messageInfo_KnowledgeGraph proto.InternalMessageInfo

func (m *KnowledgeGraph) GetNodes() map[string]*_struct.Struct {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *KnowledgeGraph) GetEdges() map[string]*_struct.Struct {
	if m != nil {
		return m.Edges
	}
	return nil
}

func init() {
	proto.RegisterType((*KnowledgeGraph)(nil), "graph.KnowledgeGraph")
	proto.RegisterMapType((map[string]*_struct.Struct)(nil), "graph.KnowledgeGraph.EdgesEntry")
	proto.RegisterMapType((map[string]*_struct.Struct)(nil), "graph.KnowledgeGraph.NodesEntry")
}

func init() {
	proto.RegisterFile("knowledge_graph.proto", fileDescriptor_b4c45ecb0153b5ca)
}

var fileDescriptor_b4c45ecb0153b5ca = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcd, 0xce, 0xcb, 0x2f,
	0xcf, 0x49, 0x4d, 0x49, 0x4f, 0x8d, 0x4f, 0x2f, 0x4a, 0x2c, 0xc8, 0xd0, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x05, 0x73, 0xa4, 0x64, 0xd2, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0x82,
	0x49, 0xa5, 0x69, 0xfa, 0xc5, 0x25, 0x45, 0xa5, 0xc9, 0x25, 0x10, 0x45, 0x4a, 0xcb, 0x98, 0xb8,
	0xf8, 0xbc, 0x61, 0xda, 0xdd, 0x41, 0x1a, 0x84, 0xcc, 0xb8, 0x58, 0xf3, 0xf2, 0x53, 0x52, 0x8b,
	0x25, 0x18, 0x15, 0x98, 0x35, 0xb8, 0x8d, 0x14, 0xf4, 0x20, 0x86, 0xa2, 0xaa, 0xd2, 0xf3, 0x03,
	0x29, 0x71, 0xcd, 0x2b, 0x29, 0xaa, 0x0c, 0x82, 0x28, 0x07, 0xe9, 0x03, 0x49, 0x17, 0x4b, 0x30,
	0xe1, 0xd3, 0xe7, 0x0a, 0x52, 0x02, 0xd5, 0x07, 0x56, 0x2e, 0x15, 0xc8, 0xc5, 0x85, 0x30, 0x4c,
	0x48, 0x80, 0x8b, 0x39, 0x3b, 0xb5, 0x52, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc4, 0x14,
	0xd2, 0xe5, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x36, 0x12,
	0xd7, 0x83, 0x78, 0x48, 0x0f, 0xe6, 0x21, 0xbd, 0x60, 0xb0, 0x87, 0x82, 0x20, 0xaa, 0xac, 0x98,
	0x2c, 0x18, 0x41, 0x46, 0x22, 0xec, 0xa1, 0x8a, 0x91, 0x49, 0x6c, 0x60, 0x39, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x4b, 0x1b, 0xa0, 0xb8, 0x6d, 0x01, 0x00, 0x00,
}
